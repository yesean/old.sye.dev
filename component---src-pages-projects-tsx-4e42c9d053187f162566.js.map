{"version":3,"file":"component---src-pages-projects-tsx-4e42c9d053187f162566.js","mappings":"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","sources":["webpack://sye.dev/./src/components/Projects/Project.tsx","webpack://sye.dev/./src/components/Projects/index.tsx","webpack://sye.dev/./src/pages/projects.tsx"],"sourcesContent":["import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\"\nimport { faLink } from \"@fortawesome/free-solid-svg-icons\"\nimport \"./style.css\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\ntype ProjectLink = { name: string; href: string }\ntype Description = string | (string | ProjectLink)[]\n\nconst renderLink = (link: ProjectLink) => (\n  <a\n    key={link.name}\n    href={link.href}\n    target=\"_blank\"\n    rel=\"noopener noreferrer\"\n    className=\"project-text-link\"\n  >\n    {link.name}\n  </a>\n)\n\nconst parseDescription = (desc: Description) => {\n  if (typeof desc === \"string\" || desc.length === 0) return desc as string\n\n  // check if enough links are provided\n  const texts = (desc[0] as string).split(\"$link\")\n  const links = desc.slice(1) as ProjectLink[]\n  const numberOfExpectedLinks = texts.length - 1\n  const numberOfActualLinks = desc.length - 1\n  if (numberOfExpectedLinks < numberOfActualLinks)\n    throw new Error(\n      `Expected ${numberOfExpectedLinks} links. Only ${numberOfActualLinks} links provided.`\n    )\n\n  const renderedDesc = new Array(numberOfExpectedLinks)\n    .fill(null)\n    .reduce<(JSX.Element | string)[]>(\n      (acc, _, i) => acc.concat(texts[i], renderLink(links[i])),\n      []\n    )\n  return renderedDesc.concat(texts[texts.length - 1])\n}\n\ntype ProjectProps = {\n  name: string\n  description: Description\n  projectURL: string\n  githubURL: string\n}\n\ntype ProjectName =\n  | \"QBHub\"\n  | \"pathmazer\"\n  | \"todo\"\n  | \"generals.io bot\"\n  | \"dotfiles\"\nconst renderImage = (name: ProjectName) => {\n  const imgStyle = {\n    objectFit: \"cover\",\n    borderRadius: \"5px 5px 0 0\",\n  } as React.CSSProperties\n  if (name === \"QBHub\") {\n    return (\n      <StaticImage\n        src=\"../../assets/qbhub.png\"\n        alt={name}\n        imgStyle={imgStyle}\n      />\n    )\n  } else if (name === \"pathmazer\") {\n    return (\n      <StaticImage\n        src=\"../../assets/pathmazer.png\"\n        alt={name}\n        imgStyle={imgStyle}\n      />\n    )\n  } else if (name === \"todo\") {\n    return (\n      <StaticImage src=\"../../assets/todo.png\" alt={name} imgStyle={imgStyle} />\n    )\n  } else if (name === \"generals.io bot\") {\n    return (\n      <StaticImage\n        src=\"../../assets/generals.png\"\n        alt={name}\n        imgStyle={imgStyle}\n      />\n    )\n  } else if (name === \"dotfiles\") {\n    return (\n      <StaticImage\n        src=\"../../assets/dotfiles.png\"\n        alt={name}\n        imgStyle={imgStyle}\n      />\n    )\n  }\n}\n\nconst Project: React.FC<ProjectProps> = ({\n  name,\n  description,\n  projectURL,\n  githubURL,\n}) => {\n  return (\n    <div className=\"project-card\">\n      <a\n        href={projectURL}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className=\"project-image-container\"\n      >\n        {renderImage(name as ProjectName)}\n      </a>\n      <div className=\"project-info\">\n        <h1 className=\"project-name\">{name}</h1>\n        <p className=\"project-description\">{parseDescription(description)}</p>\n        <div className=\"project-links\">\n          <a href={projectURL} target=\"_blank\" rel=\"noopener noreferrer\">\n            <FontAwesomeIcon icon={faLink} className=\"project-icon-link\" />\n          </a>\n          <a href={githubURL} target=\"_blank\" rel=\"noopener noreferrer\">\n            <FontAwesomeIcon icon={faGithub} className=\"project-icon-link\" />\n          </a>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Project\n","import Project from \"./Project\"\nimport { PROJECTS } from \"../../utils/constants\"\nimport \"./style.css\"\n\nconst Projects: React.FC = () => {\n  return (\n    <div className=\"projects\">\n      {PROJECTS.map(proj => (\n        <Project\n          key={proj.name}\n          name={proj.name}\n          description={proj.description}\n          projectURL={proj.projectURL}\n          githubURL={proj.githubURL}\n        />\n      ))}\n    </div>\n  )\n}\n\nexport default Projects\n","import Projects from \"../components/Projects\"\nimport Layout from \"../components/layout\"\n\nexport default () => {\n  return (\n    <Layout page=\"/projects\">\n      <Projects />\n    </Layout>\n  )\n}\n"],"names":["parseDescription","desc","length","texts","split","links","slice","numberOfExpectedLinks","numberOfActualLinks","Error","Array","fill","reduce","acc","_","i","concat","link","_jsx","href","target","rel","className","children","name","renderImage","imgStyle","objectFit","borderRadius","StaticImage","src","alt","__imageData","require","_ref","description","projectURL","githubURL","_jsxs","FontAwesomeIcon","icon","faLink","faGithub","PROJECTS","proj","Project","Layout","page","Projects"],"sourceRoot":""}