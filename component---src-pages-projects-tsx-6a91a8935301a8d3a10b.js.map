{"version":3,"file":"component---src-pages-projects-tsx-6a91a8935301a8d3a10b.js","mappings":"0MAqBMA,EAAmB,SAACC,GACxB,GAAoB,iBAATA,GAAqC,IAAhBA,EAAKC,OAAc,OAAOD,EAG1D,IAAME,EAASF,EAAK,GAAcG,MAAM,SAClCC,EAAQJ,EAAKK,MAAM,GACnBC,EAAwBJ,EAAMD,OAAS,EACvCM,EAAsBP,EAAKC,OAAS,EAC1C,GAAIK,EAAwBC,EAC1B,MAAM,IAAIC,MAAJ,YACQF,EADR,gBAC6CC,EAD7C,oBAUR,OANqB,IAAIE,MAAMH,GAC5BI,KAAK,MACLC,QACC,SAACC,EAAKC,EAAGC,GAAT,OAAeF,EAAIG,OAAOb,EAAMY,IA3BlBE,EA2BiCZ,EAAMU,IA1BzD,cACEG,KAAMD,EAAKC,KACXC,OAAO,SACPC,IAAI,sBACJC,UAAU,oBAJZ,SAMGJ,EAAKK,SAPS,IAACL,IA4Bd,IAEgBD,OAAOb,EAAMA,EAAMD,OAAS,KAY5CqB,EAAc,SAACD,GACnB,MAAa,cAATA,GAEA,SAAC,EAAAE,EAAD,CACEC,IAAI,6BACJC,IAAKJ,EACLD,UAAU,gBAHZ,sBAMgB,SAATC,GAEP,SAAC,EAAAE,EAAD,CACEC,IAAI,wBACJC,IAAKJ,EACLD,UAAU,gBAHZ,sBAMgB,oBAATC,GAEP,SAAC,EAAAE,EAAD,CACEC,IAAI,4BACJC,IAAKJ,EACLD,UAAU,gBAHZ,sBAMgB,aAATC,GAEP,SAAC,EAAAE,EAAD,CACEC,IAAI,4BACJC,IAAKJ,EACLD,UAAU,gBAHZ,2BAFG,GA4CT,EAjCwC,SAAC,GAMnC,EALJM,SAKK,IAJLL,EAII,EAJJA,KACAM,EAGI,EAHJA,YACAC,EAEI,EAFJA,WACAC,EACI,EADJA,UAEA,OACE,iBAAKT,UAAU,eAAf,WACE,cACEH,KAAMW,EACNV,OAAO,SACPC,IAAI,sBACJC,UAAU,0BAJZ,SAMGE,EAAYD,MAEf,iBAAKD,UAAU,eAAf,WACE,eAAIA,UAAU,eAAd,SAA8BC,KAC9B,cAAGD,UAAU,sBAAb,SAAoCrB,EAAiB4B,MACrD,iBAAKP,UAAU,gBAAf,WACE,cAAGH,KAAMW,EAAYV,OAAO,SAASC,IAAI,sBAAzC,UACE,SAAC,IAAD,CAAiBW,KAAMC,EAAAA,IAAQX,UAAU,yBAE3C,cAAGH,KAAMY,EAAWX,OAAO,SAASC,IAAI,sBAAxC,UACE,SAAC,IAAD,CAAiBW,KAAME,EAAAA,IAAUZ,UAAU,kC,UC5FvD,EAjB2B,WACzB,OACE,gBAAKA,UAAU,WAAf,SACGa,EAAAA,GAAAA,KAAa,SAAAC,GAAI,OAChB,SAAC,EAAD,CAEER,SAAUQ,EAAKR,SACfL,KAAMa,EAAKb,KACXM,YAAaO,EAAKP,YAClBC,WAAYM,EAAKN,WACjBC,UAAWK,EAAKL,WALXK,EAAKb,Y,UCNpB,aACE,OACE,SAAC,IAAD,CAAQc,KAAK,YAAb,UACE,SAAC,EAAD,Q","sources":["webpack://sean-ye/./src/components/Projects/Project.tsx","webpack://sean-ye/./src/components/Projects/index.tsx","webpack://sean-ye/./src/pages/projects.tsx"],"sourcesContent":["import { ReactNode } from \"react\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\"\nimport { faLink } from \"@fortawesome/free-solid-svg-icons\"\nimport \"./style.css\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\ntype ProjectLink = { name: string; href: string }\ntype Description = string | (string | ProjectLink)[]\n\nconst renderLink = (link: ProjectLink) => (\n  <a\n    href={link.href}\n    target=\"_blank\"\n    rel=\"noopener noreferrer\"\n    className=\"project-text-link\"\n  >\n    {link.name}\n  </a>\n)\n\nconst parseDescription = (desc: Description) => {\n  if (typeof desc === \"string\" || desc.length === 0) return desc\n\n  // check if enough links are provided\n  const texts = (desc[0] as string).split(\"$link\")\n  const links = desc.slice(1) as ProjectLink[]\n  const numberOfExpectedLinks = texts.length - 1\n  const numberOfActualLinks = desc.length - 1\n  if (numberOfExpectedLinks < numberOfActualLinks)\n    throw new Error(\n      `Expected ${numberOfExpectedLinks} links. Only ${numberOfActualLinks} links provided.`\n    )\n\n  const renderedDesc = new Array(numberOfExpectedLinks)\n    .fill(null)\n    .reduce<(JSX.Element | string)[]>(\n      (acc, _, i) => acc.concat(texts[i], renderLink(links[i])),\n      []\n    )\n  return renderedDesc.concat(texts[texts.length - 1])\n}\n\ntype ProjectProps = {\n  imageSrc: string\n  name: string\n  description: Description\n  projectURL: string\n  githubURL: string\n}\n\ntype ProjectName = \"pathmazer\" | \"todo\" | \"generals.io bot\" | \"dotfiles\"\nconst renderImage = (name: ProjectName) => {\n  if (name === \"pathmazer\") {\n    return (\n      <StaticImage\n        src=\"../../assets/pathmazer.png\"\n        alt={name}\n        className=\"project-image\"\n      />\n    )\n  } else if (name === \"todo\") {\n    return (\n      <StaticImage\n        src=\"../../assets/todo.png\"\n        alt={name}\n        className=\"project-image\"\n      />\n    )\n  } else if (name === \"generals.io bot\") {\n    return (\n      <StaticImage\n        src=\"../../assets/generals.png\"\n        alt={name}\n        className=\"project-image\"\n      />\n    )\n  } else if (name === \"dotfiles\") {\n    return (\n      <StaticImage\n        src=\"../../assets/dotfiles.png\"\n        alt={name}\n        className=\"project-image\"\n      />\n    )\n  }\n}\n\nconst Project: React.FC<ProjectProps> = ({\n  imageSrc,\n  name,\n  description,\n  projectURL,\n  githubURL,\n}) => {\n  return (\n    <div className=\"project-card\">\n      <a\n        href={projectURL}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className=\"project-image-container\"\n      >\n        {renderImage(name as ProjectName)}\n      </a>\n      <div className=\"project-info\">\n        <h1 className=\"project-name\">{name}</h1>\n        <p className=\"project-description\">{parseDescription(description)}</p>\n        <div className=\"project-links\">\n          <a href={projectURL} target=\"_blank\" rel=\"noopener noreferrer\">\n            <FontAwesomeIcon icon={faLink} className=\"project-icon-link\" />\n          </a>\n          <a href={githubURL} target=\"_blank\" rel=\"noopener noreferrer\">\n            <FontAwesomeIcon icon={faGithub} className=\"project-icon-link\" />\n          </a>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Project\n","import Project from \"./Project\"\nimport { PROJECTS } from \"../../utils/constants\"\nimport \"./style.css\"\n\nconst Projects: React.FC = () => {\n  return (\n    <div className=\"projects\">\n      {PROJECTS.map(proj => (\n        <Project\n          key={proj.name}\n          imageSrc={proj.imageSrc}\n          name={proj.name}\n          description={proj.description}\n          projectURL={proj.projectURL}\n          githubURL={proj.githubURL}\n        />\n      ))}\n    </div>\n  )\n}\n\nexport default Projects\n","import Projects from \"../components/Projects\"\nimport Layout from \"../components/layout\"\n\nexport default () => {\n  return (\n    <Layout page=\"/projects\">\n      <Projects />\n    </Layout>\n  )\n}\n"],"names":["parseDescription","desc","length","texts","split","links","slice","numberOfExpectedLinks","numberOfActualLinks","Error","Array","fill","reduce","acc","_","i","concat","link","href","target","rel","className","name","renderImage","S","src","alt","imageSrc","description","projectURL","githubURL","icon","faLink","faGithub","PROJECTS","proj","page"],"sourceRoot":""}